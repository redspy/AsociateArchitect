아키텍쳐 설계
 - 우리가 지금까지 보아 온 SW 아키텍처는?
 - 우리가 놓치고 있던 SW 아키텍처는?
*. 그동안 우리가 봤던 SW 아키텍처는 별 도움이 되지 않았다.

SW개발 Life Cycle은 어떻게 되는가?
 - 요구사항 - 분석 - 설계 - 구현 - 테스트 - 유지보수
*. 아키텍쳐는 발견, 발명, 구축의 교집합 개념이 되어야 한다.
 : 발견 : 아키텍쳐 드라이버 (비지니스 중요도, 개발 난이도 도출)
 : 발명 : 아키텍처 택틱(각각의 택틱을 선택한 이유와 선택하지 않은 이유가 있어야함)
 : 구축 : 아키텍처 뷰

아키텍처 정의
소프트웨어 시스템의 외부로 드러나는 특성을 달성하기 위해 소프트웨어 시스템의 구성요소와 구성요소들의 관계를 표현하는 시스템의 구조나 구조체

품질이란?
시스템의 완성도!

*. 변경용이성의 기준 : 설계시? 구현시? 컴파일시? 링킹? 로딩? 실행중?


아키텍처 설계사례
1. Context Diagram
2. Feature 도출 (FR, NFR)
3. NFR / QA 선정
 - 1. 공동문서편집 동기화 속도가 빨라야 한다 -> 성능
 - 3. 파일 Export 포맷 형태가 확장 가능해야 한다. -> 변경용이성
 - 여기서 Architectural Driver 를 선정해야한다. (2~3개)
4. 품질속성 시나리오 작성
 - 성능 : xxx
 - Raw Scenario : 공동문서편집 동기화 속도가 빨라야 한다. (최대 굥유사용자는 30명 제한)
 - Source -> Artifact -> Response 작성
 - Refined Scenario : 사용자가 공동문서 편집 환경에서 ADL을 작성하면 블라블라..

 - 변경용이성
 - Raw Scenario : 파일 Exprot 포맷 형태가 확장 가능해야한다.
 - 포맷확장 개발비용 < 1MM
 - Refined Scenario : 개발자가 파일 Export 포맷 형태를 추가할 때 1MM 이내 개발 완료되어야 한다.

 - 보안, 가용성, 사용편의성, 시험용이성 ....
 - 두가지 속성을 가진경우 따로 작성을 한 다음에,

 docs.google.com/presentation/d/1CJ2VfC4LpMmCZCrjELk_1s7S7Tl_L3jOLF0uqQm94yU