출입
1. 사람이 출입단말기 앞에 나타남
2. 카메라에 얼굴을 들이댐 (혹은 QR코드를 들이댐)
3. 카메라에서 얻은 영상정보가 출입관리 시스템으로 전송됨
 - 시스템이 살아있는지 확인을 해야겠지? (로드밸런스로 해결)
 - 시스템이 죽어있으면 얼굴인식 안되고 비밀번호 혹은 세대번호 눌러서 기존처럼 해야겠지? (이걸 표현해야하나?)
4. 시스템은 영상을 분석해서 얼굴인지 QR인지 확인함
4-1. 얼굴이면, 얼굴을 인식하고 해당 RAW 데이터를 얻어냄, QR이면 QR데이터를 얻어냄
4-2. Database 서버가 살아있는지 확인해야겠지? (로드밸런스로 해결)
4-2. RAW데이터 정보가 Database에 존재하는지 확인
4-3. Database에 존재하는경우 출입이 가능하다는 정보를 출입단말기에 전달
4-4. Database에 존재하지 않는경우 미등록된 사용자임을 출입단말기에 전달하고, 미등록사용자 출입에 대하여 FCM Server로 전송
5. 출입단말기는 결과값에 따라 출입문 개방 여부를 판단함

방문자등록
1. 거주자가 스마트폰 앱에 들어가서,
2. 방문시간, 목적, 전화번호를 입력하면 방문자 관리 Server로 전달
3. 방문자 관리 Server는 Main Server로 데이터를 전송하여 QR코드발급 및 FCM Server로 QR전송
4. 방문자 관리 Server는 Database Server로 해당 데이터 등록

거주자등록
1. 아파트 관리자는 운영콘솔의 Web Application으로 관리함
2. 거주자 동/호수, 얼굴 정보를 입력하면,
3. Web Server로 전달되고, Main Server에 등록을 요청함
4. Main Server는 해당 정보를 Database 서버에 등록을 요청

<Quality Attribute>
*. 성능과 가용성 확보를 위해 출입단말기와 서버 사이에 로드밸런서 사용
*. Database Server의 가용성 확보를 위해 백업서버 방식 사용? (Active/Standby)
*. Main Server의 가용성확보를 위해 Recovery Server를 둬야겠지? Main Server도 두개로 싱크 맞춰놔야겠네..
*. 단말기 가용성 체크를 위해 ping을 때리는데, 누가하지? Local서버에서 분산, 알림에 걸리는 시간도 정해야겠지?
*. 인식된 얼굴의 등록 여부를 판단할때 Retry Logic을 넣어야겠네
*. 얼굴인식, QR인식 말고 추가적인 영상인증(홍채?지문?)을 위해 Interface 작성 (디자인패턴적용)
*. 새로운 방식의 출입단말기 지원을 위한 디자인패턴 적용

<DD>0..10000
*. 출입관리시스템서버, Local Server, Database Server, 방문자 관리 Server의 관계 정리

<Node>
- 출입단말기(N) : 카메라로 데이터 획득 및 전송
- 로드밸런서(Local Server)  : AWS ELB, 출입단말기로부터 전송되는 정보를 Local Server로 전송
- Local Server(N) : 출입단말기로부터 들어오는 영상정보 처리 및 얼굴정규화 데이터를 출입관리 시스템으로 전송하여 출입여부 확인, 출입단말기로 인증결과 전송
- 로드밸런서(Database Server) : Local Server로 부터 들어온 요청을 살아있는 출입관리시스템 서버로 전달
- Database Server(2) : 출입관리 시스템 서버로 부터 등록 및 조회 요청을 받음
- 로드밸런서(Web Server) : Web Application으로부터 들어오는 요청을 Web Server로 전송
- Web Server : 아파트 관리자 콘솔에서 Web Application을 구동하기 위한 서버, 거주자 등록을 요청받아 Database Server로 전송
- 로드밸런서(방문자 관리 Server) : 거주자 스마트폰으로부터 들어오는 방문자 등록 요청을 받아 방문자 관리 Server로 전송
- 방문자 관리 Server : 거주자 스마트폰에서 들어오는 방문자 등록요청을 Database로 전송
- FCM Server : 방문자 QR코드, 단말기 이상발생시 관리자에게 알림 등 Push 알림을 보내기 위한 서버
- 거주자 스마트폰(N) : 방문자 등록 요청을 위한 Application을 실행
- 방문자 스마트폰(N) : QR코드를 전달받아 출입시 해당 코드로 인증 시도
- 아파트 관리지 콘솔(N) : Web Application으로 Web Server에 거주자 정보를 등록
- 출입관리시스템 서버(2) : DB Access 역할을 함. 
  - Local Server로 부터 얼굴인식 정규화 데이터 혹은 QR정보를 받아 Database에 정보가 있는지 확인
  - Web Server로 부터 거주자 정보(동/호수, 얼굴사진)를 받아 DB에 등록을 요청
  - 방문자 관리 Server로 부터 방문자 정보를 받아 DB에 등록을 요청하고, QR코드를 전송함



